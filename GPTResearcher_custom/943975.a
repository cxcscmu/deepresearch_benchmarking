# When Should a Dependency Be Raised as a Program Risk? — A Comprehensive Analysis

In the realm of program management, the identification and management of risks are pivotal to the success of any program. Among the various types of risks, dependency risks hold a unique and critical position due to their inherent nature of involving external or internal entities upon which a program’s components rely. This report provides an in-depth exploration of when a dependency should be raised as a program risk, synthesizing insights from multiple authoritative sources, and offering a structured, evidence-based perspective.

---

## Understanding Dependency Risk in Programs

Dependency risk arises whenever a program or project relies on an external or internal service, resource, event, or component that it does not control. This can include dependencies on people, teams, processes, software, hardware, services, money, or any other resource critical for delivering program objectives. The risk is that if the dependency fails or underperforms, it can jeopardize the program’s success.

For example, a software service dependent on a hardware server is exposed to risks if the server fails or if the electricity supply to the server is interrupted. Similarly, dependencies on third-party teams or suppliers introduce risks related to their reliability and performance ([Risk-First](https://riskfirst.org/risks/Dependency-Risk)).

---

## The Context of Program Risk Management

Programs consist of multiple projects, each with their own risks. Not all project risks are relevant at the program level; therefore, escalation criteria are necessary to determine which risks should be elevated to program-level management. Program risk management operates on two levels:

1. **Implicit Management**: Balancing overall program risk exposure through risk-efficient program composition and execution.
2. **Explicit Management**: Structured identification, assessment, response development, and monitoring of individual program risks, including those escalated from projects or delegated from higher strategic levels ([PMI, 2024](https://www.pmi.org/learning/library/program-related-risks-maturity-management-6924)).

---

## When Should a Dependency Be Added as a Program Risk?

### 1. **When the Dependency Must Be Accepted**

According to the PO PM Certification materials, a dependency should be added to the program risks **when it must be accepted**. This implies that the dependency is unavoidable and integral to the program’s delivery, and its associated risk cannot be eliminated or transferred but must be actively managed ([ServiceCentreList, 2022](https://servicecentrelist.com/when-should-a-dependency-be-added-to-the-program-risks)).

### 2. **When the Dependency Has Program-Level Impact**

A dependency should be raised as a program risk if it has the potential to impact program objectives significantly. This includes dependencies that:

- Affect multiple projects within the program.
- Influence strategic program outcomes.
- Require program-level responses due to their scale or complexity.

Escalation criteria must define thresholds for impact and likelihood that warrant raising a dependency risk to the program level ([PMI, 2024](https://www.pmi.org/learning/library/program-related-risks-maturity-management-6924)).

### 3. **When the Dependency Introduces Interdependencies**

Interdependencies between projects or components within a program are a primary source of program risk. When a dependency creates a link between projects or teams that could propagate risk or delays, it should be managed at the program level. This is because interdependencies require coordinated planning and control beyond individual projects ([Vaughan, 2011](https://projectmanager.com.au/risk-interdependency-programs/)).

### 4. **When the Dependency Exhibits Significant Reliability Risk**

Reliability risk is a critical aspect of dependency risk. If the dependency’s reliability is uncertain or known to be problematic—such as a third-party service with a history of outages or a supplier facing resource constraints—this risk should be elevated to program risk management to ensure mitigation strategies are in place ([Risk-First](https://riskfirst.org/risks/Dependency-Risk)).

### 5. **When the Dependency Involves Scarce or Critical Resources**

Scarcity risk arises when the dependency involves limited resources such as time, money, or staff. Competition for scarce resources can cause delays or failures. Dependencies involving scarce resources that affect program delivery timelines or quality must be raised as program risks ([Risk-First](https://riskfirst.org/risks/Dependency-Risk)).

### 6. **When the Dependency Complexity or Invisibility Increases Risk**

Complex dependencies or those that are invisible (i.e., their impact or failure modes are not easily understood or visible) increase the risk profile. Such dependencies should be managed explicitly at the program level to ensure transparency and control ([Risk-First](https://riskfirst.org/risks/Dependency-Risk)).

---

## Managing Dependency Risks at Program Level

Once a dependency is raised as a program risk, it requires structured management:

| Aspect                  | Description                                                                                         | Example Tools/Approaches                     |
|-------------------------|-------------------------------------------------------------------------------------------------|---------------------------------------------|
| **Identification**      | Use brainstorming, checklists, assumptions analysis, Delphi groups to identify dependency risks. | Risk workshops, RBS (Risk Breakdown Structure) |
| **Assessment**          | Qualitative and quantitative analysis to prioritize based on likelihood and impact.              | Probability-impact matrix, Monte Carlo simulation |
| **Response Development**| Develop risk responses: avoid, transfer, reduce, accept; escalate or delegate as appropriate.     | Contingency planning, contracts, escalation protocols |
| **Monitoring**          | Regular review and adjustment of risk status throughout program lifecycle.                         | Risk registers, dashboards, periodic reviews |

Effective management also involves adjusting program composition to maintain risk efficiency and balancing risk exposure across projects ([PMI, 2024](https://www.pmi.org/learning/library/program-related-risks-maturity-management-6924)).

---

## The Role of Program Management Tools

Tools such as Gantt charts and dependency grids (e.g., Jira Align’s Dependencies grid) help visualize and manage dependencies by aligning tasks with resource availability and sequencing work based on dependency relationships. These tools support proactive risk management by highlighting critical dependencies and their status in real-time ([Risk-First](https://riskfirst.org/risks/Dependency-Risk); [Jira Align](https://help.jiraalign.com/hc/en-us/articles/115002700947-10X-Dependency-Overview-and-Dependency-Types)).

---

## Summary and Opinion

Based on the comprehensive review of the literature and authoritative sources, a dependency should be raised as a program risk **when it must be accepted as an integral part of program delivery and when it has the potential to impact the program’s objectives significantly**. This includes dependencies that:

- Cross project boundaries and create interdependencies.
- Involve scarce, critical, or complex resources.
- Exhibit reliability concerns or invisibility that obscure their risk.
- Meet predefined escalation criteria based on impact and likelihood.

Raising dependencies as program risks ensures that they receive appropriate attention, coordinated management, and resource allocation at the program level, which is essential for successful program delivery. Ignoring or underestimating dependency risks can lead to cascading failures, delays, and cost overruns.

Therefore, program managers should establish clear escalation criteria and integrate dependency risk management into both implicit and explicit program risk management processes. This approach aligns with best practices in program management and risk theory, ensuring that dependencies are managed proactively rather than reactively.

---

## References

Martin Vaughan. (2011, April 21). *Risk and interdependency in programs*. Project Manager. https://projectmanager.com.au/risk-interdependency-programs/

PMI. (2024). *Program-related risks: Maturity and management*. Project Management Institute. https://www.pmi.org/learning/library/program-related-risks-maturity-management-6924

Risk-First. (n.d.). *Dependency Risk*. Risk-First. https://riskfirst.org/risks/Dependency-Risk

ServiceCentreList.com. (2022, April 13). *When should a dependency be added to the program risks?* ServiceCentreList. https://servicecentrelist.com/when-should-a-dependency-be-added-to-the-program-risks

Jira Align. (n.d.). *10X: Dependency Overview and Dependency Types*. Jira Align. https://help.jiraalign.com/hc/en-us/articles/115002700947-10X-Dependency-Overview-and-Dependency-Types

---

This report aims to provide a clear, structured, and evidence-based understanding of when dependencies should be raised as program risks, supporting program managers and practitioners in effective risk management practices.